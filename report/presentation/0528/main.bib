@article{Kunze_2018,
  title     = {Formal Small-Step Verification of a Call-by-Value Lambda Calculus Machine},
  isbn      = {9783030027681},
  issn      = {1611-3349},
  url       = {http://dx.doi.org/10.1007/978-3-030-02768-1_15},
  doi       = {10.1007/978-3-030-02768-1_15},
  journal   = {Lecture Notes in Computer Science},
  publisher = {Springer International Publishing},
  author    = {Kunze, Fabian and Smolka, Gert and Forster, Yannick},
  year      = {2018},
  pages     = {264–283}
}

@inproceedings{10.5555/3026877.3026928,
  author    = {Gu, Ronghui and Shao, Zhong and Chen, Hao and Wu, Xiongnan and Kim, Jieung and Sj\"{o}berg, Vilhelm and Costanzo, David},
  title     = {CertiKOS: An Extensible Architecture for Building Certified Concurrent OS Kernels},
  year      = {2016},
  isbn      = {9781931971331},
  publisher = {USENIX Association},
  address   = {USA},
  abstract  = {Complete formal verification of a non-trivial concurrent OS kernel is widely considered a grand challenge. We present a novel compositional approach for building certified concurrent OS kernels. Concurrency allows interleaved execution of kernel/user modules across different layers of abstraction. Each such layer can have a different set of observable events. We insist on formally specifying these layers and their observable events, and then verifying each kernel module at its proper abstraction level. To support certified linking with other CPUs or threads, we prove a strong contextual refinement property for every kernel function, which states that the implementation of each such function will behave like its specification under any kernel/user context with any valid interleaving. We have successfully developed a practical concurrent OS kernel and verified its (contextual) functional correctness in Coq. Our certified kernel is written in 6500 lines of C and x86 assembly and runs on stock x86 multicore machines. To our knowledge, this is the first proof of functional correctness of a complete, general-purpose concurrent OS kernel with fine-grained locking.},
  booktitle = {Proceedings of the 12th USENIX Conference on Operating Systems Design and Implementation},
  pages     = {653–669},
  numpages  = {17},
  location  = {Savannah, GA, USA},
  series    = {OSDI'16}
}

@book{Software_Engineering_and_Formal_Methods,
  editor    = {Alessandro Cimatti, Marjan Sirjani},
  title     = {Software Engineering and Formal Methods},
  publisher = {Springer, Cham},
  year      = {2017},
  doi       = {https://doi.org/10.1007/978-3-319-66197-1}
}